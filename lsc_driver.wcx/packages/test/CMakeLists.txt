
#_____________________________________________________________________________________________________________________________________________________________________________________________
#                                             Generated by WCX - Workflow C/C++ with CMake
#                                                             Author: KDZ7
#_____________________________________________________________________________________________________________________________________________________________________________________________
#_____________________________________________________________________________________________________________________________________________________________________________________________
#                                                  Default template for CMakeLists.txt
#                                         Template for to have a shared library in the project
#                                                You can modify the template as you wish
# 
#                                        !!! The variable start with __WCX modify carefully !!!
#_____________________________________________________________________________________________________________________________________________________________________________________________

cmake_minimum_required(VERSION 3.18)

set(__PROJECT_NAME lsc_driver.wcx)
set(__TARGET_NAME test)

project(${__PROJECT_NAME})

# Set global configuration variables
set(__WCX_CXX_STANDARD 17)
set(__WCX_OPTIMIZATION 2)
set(__WCX_WARNING OFF)
set(__WCX_PACKAGE_VERSION "1.0.0")
set(__WCX_EXPORT_DESTINATION cmake/)

# ___________________________________________________________________________________________________________________________________________________________________________________________
#                                                     SECTION: Executable Configuration
# ___________________________________________________________________________________________________________________________________________________________________________________________

# Create the executable
add_executable(
    ${__TARGET_NAME}
    src/${__TARGET_NAME}.cpp
)

# Include the header files for the executable
target_include_directories(
    ${__TARGET_NAME}                                                      
    PRIVATE
    ${CMAKE_CURRENT_SOURCE_DIR}/include
)

# ___________________________________________________________________________________________________________________________________________________________________________________________
#                                                     SECTION: Compiler Configuration 
# ___________________________________________________________________________________________________________________________________________________________________________________________

# C++ standard
set(CMAKE_CXX_STANDARD ${__WCX_CXX_STANDARD}) 
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Optimization level (Default: O${__WCX_OPTIMIZATION})
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -O${__WCX_OPTIMIZATION}")
set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -O${__WCX_OPTIMIZATION}")

# Add compiler warning flags
if(__WCX_WARNING)
    if(MSVC)
    # MSVC warning configuration 
        target_compile_options(
            ${__TARGET_NAME}
            PRIVATE 
            /W4                                                              # Warning level 4
            /WX                                                              # Treat warnings as errors
            /permissive-                                                     # Strict standard compliance
        )
    else()
    # GCC/Clang/.. warning configuration
        target_compile_options(
            ${__TARGET_NAME}
            PRIVATE
            -Wall                                                            # Enable all basic warnings
            -Wextra                                                          # Enable extra warnings
            -Wpedantic                                                       # Strict ISO C/C++ compliance
            -Werror                                                          # Treat warnings as errors
            -Wconversion                                                     # Warn about implicit conversions
            -Wshadow                                                         # Warn about shadowed variables
        )
    endif()
else()
# Minimal warnings configuration (Default mode)
    if(NOT MSVC)
        target_compile_options(
            ${__TARGET_NAME}
            PRIVATE
            -Wno-unused-parameter                                            # Disable unused parameter warning
            -Wno-unused-variable                                             # Disable unused variable warning
        )
    endif()
endif()

# ___________________________________________________________________________________________________________________________________________________________________________________________
#                                                SECTION: Preprocessor Configuration
# ___________________________________________________________________________________________________________________________________________________________________________________________
# Add compile definitions for preprocessing
target_compile_definitions(
    ${__TARGET_NAME}
    PRIVATE
    __TEST_EXPORTS__                                               # Custom macro definition                                                       
)
# ___________________________________________________________________________________________________________________________________________________________________________________________
#                                                 SECTION: Dependencies Configuration
# ___________________________________________________________________________________________________________________________________________________________________________________________
# Add the dependencies packages if needed
  find_package(hid_hidraw REQUIRED)
  find_package(lsc_servocontrol REQUIRED)
# find_package(package_name REQUIRED)

# Link the external libraries if needed
  target_link_libraries(
    ${__TARGET_NAME}
    PUBLIC
    hid_hidraw::hid_hidraw
    lsc_servocontrol::lsc_servocontrol
#   external_library
#   namespace::external_library
 )
# ___________________________________________________________________________________________________________________________________________________________________________________________
#                                                  SECTION: Installation Configuration
# ___________________________________________________________________________________________________________________________________________________________________________________________
# Install the executable
install(
    TARGETS ${__TARGET_NAME}
    EXPORT ${__TARGET_NAME}-targets
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
    RUNTIME DESTINATION bin
)

# ___________________________________________________________________________________________________________________________________________________________________________________________
#                                                    SECTION: Version Configuration
# ___________________________________________________________________________________________________________________________________________________________________________________________
# Set the version of the project
set(${__TARGET_NAME}_VERSION ${__WCX_PACKAGE_VERSION})

# Generate the package version file
include(CMakePackageConfigHelpers)
write_basic_package_version_file(
    ${CMAKE_CURRENT_BINARY_DIR}/${__TARGET_NAME}-config-version.cmake
    VERSION ${${__TARGET_NAME}_VERSION}
    COMPATIBILITY AnyNewerVersion
)

# Install the package version file
install(
    FILES ${CMAKE_CURRENT_BINARY_DIR}/${__TARGET_NAME}-config-version.cmake
    DESTINATION ${__WCX_EXPORT_DESTINATION}
)


# ___________________________________________________________________________________________________________________________________________________________________________________________
#                                                   SECTION: Export Configuration
# ___________________________________________________________________________________________________________________________________________________________________________________________
# Export the targets

install(
    EXPORT ${__TARGET_NAME}-targets
    FILE ${__TARGET_NAME}-config.cmake
    NAMESPACE ${__TARGET_NAME}::
    DESTINATION ${__WCX_EXPORT_DESTINATION}
)


# ___________________________________________________________________________________________________________________________________________________________________________________________
#                                                   SECTION: Build Information
# ___________________________________________________________________________________________________________________________________________________________________________________________
# Print the build information
message(STATUS "Project: ${__PROJECT_NAME}")
message(STATUS "Target: ${__TARGET_NAME}")
message(STATUS "Version: ${${__TARGET_NAME}_VERSION}")
message(STATUS "Build Type: ${CMAKE_BUILD_TYPE}")
message(STATUS "Compiler: ${CMAKE_CXX_COMPILER_ID} ${CMAKE_CXX_COMPILER_VERSION}")
message(STATUS "C++ Standard: ${CMAKE_CXX_STANDARD}")
message(STATUS "Optimization Level: O${__WCX_OPTIMIZATION}")
message(STATUS "Compiler Warnings: ${__WCX_WARNING}")

